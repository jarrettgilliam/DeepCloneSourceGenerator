namespace DeepClone.SourceGenerator.Services;

using System.Reflection;
using DeepClone.SourceGenerator.Interfaces;

internal sealed class SourceCodeService : ISourceCodeService
{
    public SourceCodeService()
    {
        AssemblyName assembly = Assembly.GetExecutingAssembly().GetName();

        this.GeneratedCodeAttributeUsage = $"""
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("{assembly.Name}", "{assembly.Version}")]
            """;

        this.BaseNamespace = "DeepClone.SourceGenerator";
        this.DeepCloneableAttributeShortName = "DeepCloneable";
        this.DeepCloneableAttributeName = $"{this.DeepCloneableAttributeShortName}Attribute";
        this.DeepCloneableAttributeFullName = $"{this.BaseNamespace}.{this.DeepCloneableAttributeName}";

        this.DeepCloneableAttributeDefinition = $$"""
            // <auto-generated/>
            namespace {{this.BaseNamespace}};

            {{this.GeneratedCodeAttributeUsage}}
            [global::System.AttributeUsageAttribute(global::System.AttributeTargets.Class, AllowMultiple = false, Inherited = false)]
            internal sealed class {{this.DeepCloneableAttributeName}} : global::System.Attribute { }
            """;
    }

    public string BaseNamespace { get; }
    public string DeepCloneableAttributeDefinition { get; }
    public string DeepCloneableAttributeFullName { get; }
    public string DeepCloneableAttributeName { get; }
    public string DeepCloneableAttributeShortName { get; }
    public string GeneratedCodeAttributeUsage { get; }
}